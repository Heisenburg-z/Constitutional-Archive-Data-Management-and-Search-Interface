name: Tests and Coverage
on: [push, pull_request]
jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install Frontend Dependencies
      working-directory: Frontend
      run: npm ci --silent
      env:
        NPM_CONFIG_LOGLEVEL: error
    - name: Run Frontend Tests
      id: frontend-tests
      continue-on-error: true
      working-directory: Frontend
      run: npm run test:coverage
      env:
        CI: true
        NODE_OPTIONS: --max-old-space-size=4096 --no-warnings
        # React Scripts specific
        GENERATE_SOURCEMAP: false
        # Suppress ESLint warnings in tests
        ESLINT_NO_DEV_ERRORS: true
        # Reduce npm noise but keep errors visible
        NPM_CONFIG_LOGLEVEL: error
    - name: Upload Frontend Coverage
      if: always()
      continue-on-error: true
      working-directory: Frontend
      run: npm run report:coverage --silent
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        NPM_CONFIG_LOGLEVEL: error
    - name: Frontend Test Results Summary
      if: always()
      run: |
        if [ "${{ steps.frontend-tests.outcome }}" = "failure" ]; then
          echo "⚠️ Frontend tests failed but workflow continued"
          echo "frontend_tests_failed=true" >> $GITHUB_OUTPUT
        else
          echo "✅ Frontend tests passed"
          echo "frontend_tests_failed=false" >> $GITHUB_OUTPUT
        fi
  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install Backend Dependencies
      working-directory: Backend
      run: npm ci --silent
      env:
        NPM_CONFIG_LOGLEVEL: error
    - name: Run Backend Tests
      id: backend-tests
      continue-on-error: true
      working-directory: Backend
      run: npm run coverage --silent
      env:
        CI: true
        NODE_OPTIONS: --max-old-space-size=4096
        NPM_CONFIG_LOGLEVEL: error
        # Suppress specific warnings
        NODE_NO_WARNINGS: 1
        # Jest specific warning suppression
        JEST_SILENT: true
    - name: Upload Backend Coverage
      if: always()
      continue-on-error: true
      working-directory: Backend
      run: npm run report:coverage --silent
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        NPM_CONFIG_LOGLEVEL: error
    - name: Backend Test Results Summary
      if: always()
      run: |
        if [ "${{ steps.backend-tests.outcome }}" = "failure" ]; then
          echo "⚠️ Backend tests failed but workflow continued"
          echo "backend_tests_failed=true" >> $GITHUB_OUTPUT
        else
          echo "✅ Backend tests passed"
          echo "backend_tests_failed=false" >> $GITHUB_OUTPUT
        fi
  summary:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: always()
    steps:
    - name: Workflow Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend job: ${{ needs.frontend.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Backend job: ${{ needs.backend.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.frontend.result }}" != "success" ] || [ "${{ needs.backend.result }}" != "success" ]; then
          echo "⚠️ Some tests failed, but coverage was still uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ All tests passed successfully" >> $GITHUB_STEP_SUMMARY
        fi
