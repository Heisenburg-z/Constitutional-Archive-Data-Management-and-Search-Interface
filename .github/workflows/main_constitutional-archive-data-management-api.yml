name: Build and deploy Node.js app to Azure Web App - Constitutional Archive API

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  BACKEND_DIR: './Backend'
  WEBAPP_NAME: 'Constitutional-Archive-Data-Management-API'
  RESOURCE_GROUP: 'Constitutional-Archive-RG'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Verify package-lock.json
        run: |
          if [ ! -f "${{ env.BACKEND_DIR }}/package-lock.json" ]; then
            echo "Error: package-lock.json not found in ${{ env.BACKEND_DIR }}"
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.BACKEND_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm ci

      - name: Build project
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm run build --if-present

      - name: Prepare deployment package
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          mkdir -p deployment
          # Copy essential files
          cp -R node_modules package.json package-lock.json *.js deployment/
          
          # Copy directories if they exist
          [ -d models ] && cp -R models deployment/
          [ -d routes ] && cp -R routes deployment/
          [ -d utils ] && cp -R utils deployment/
          
          # Create empty directories if needed
          mkdir -p deployment/config
          
          # Create zip package
          cd deployment && zip -r ../deployment.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ${{ env.BACKEND_DIR }}/deployment.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip deployment.zip -d ./deployment

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          slot-name: 'Production'
          package: ./deployment
          runtime-stack: 'NODE|18-lts'
          start-up-command: 'npm start'
